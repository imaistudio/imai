@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%; /* Pure white for light mode */
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 217 91% 60%; /* This is Tailwind's blue-500 in HSL */
    --primary-foreground: 0 0% 100%; /* white text on blue background */
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
  .dark {
    --background: 0 0% 0%; /* Pure black for dark mode */
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 217 91% 60%; /* This is Tailwind's blue-500 in HSL */
    --primary-foreground: 0 0% 100%; /* white text on blue background */
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
  .theme {
    --animate-aurora: aurora 8s ease-in-out infinite alternate;
    --animate-marquee: marquee var(--duration) infinite linear;
    --animate-marquee-vertical: marquee-vertical var(--duration) linear infinite;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@theme inline {
  @keyframes aurora {
    0% {
      background-position: 0% 50%;
      transform: rotate(-5deg) scale(0.9);
    }
    25% {
      background-position: 50% 100%;
      transform: rotate(5deg) scale(1.1);
    }
    50% {
      background-position: 100% 50%;
      transform: rotate(-3deg) scale(0.95);
    }
    75% {
      background-position: 50% 0%;
      transform: rotate(3deg) scale(1.05);
    }
    100% {
      background-position: 0% 50%;
      transform: rotate(-5deg) scale(0.9);
    }
  }
  @keyframes marquee {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(calc(-100% - var(--gap)));
    }
  }
  @keyframes marquee-vertical {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(calc(-100% - var(--gap)));
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px) translateX(0px) scale(1);
      opacity: 0.6;
    }
    25% {
      transform: translateY(-20px) translateX(10px) scale(1.1);
      opacity: 1;
    }
    50% {
      transform: translateY(-10px) translateX(-10px) scale(0.9);
      opacity: 0.8;
    }
    75% {
      transform: translateY(-30px) translateX(5px) scale(1.2);
      opacity: 0.9;
    }
  }
  
  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
      opacity: 0.3;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.1;
    }
  }
}

/* Global scroll bar hiding for all elements */
* {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer 10+ */
}

*::-webkit-scrollbar {
  display: none; /* WebKit browsers (Chrome, Safari, Edge) */
}

/* Specific scroll bar hiding for html and body */
html,
body {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer 10+ */
}

html::-webkit-scrollbar,
body::-webkit-scrollbar {
  display: none; /* WebKit browsers */
}

/* Keep the existing hide-scrollbar utility class */
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

:root {
  --icon-color: #000; /* Black in light mode */
}

.dark {
  --icon-color: #fff; /* White in dark mode */
}

/* Spline Loading Animation Styles */
.spline-loading-animation {
  pointer-events: none !important;
  user-select: none !important;
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  transition: filter 0.3s ease;
}

/* Light theme - original colors */
.spline-loading-animation.light-theme {
  filter: none;
}

/* Dark theme - invert colors properly */
.spline-loading-animation.dark-theme {
  filter: invert(1) hue-rotate(180deg) brightness(0.8) contrast(1.2);
}

/* Prevent any mouse interactions with Spline canvas */
.spline-loading-animation canvas {
  pointer-events: none !important;
  touch-action: none !important;
  user-select: none !important;
  width: 100% !important;
  height: 100% !important;
  object-fit: contain !important;
}

/* Safari h-screen fix for iOS viewport issues */
@supports (-webkit-touch-callout: none) {
  .h-screen {
    height: -webkit-fill-available;
  }
}

/* Modern viewport units with fallbacks */
.h-\[100dvh\] {
  height: 100vh; /* Fallback for browsers that don't support dvh */
  height: 100dvh; /* Dynamic viewport height */
}

/* Safari-specific override for dynamic viewport height */
@supports (-webkit-touch-callout: none) {
  .h-\[100dvh\] {
    height: -webkit-fill-available;
  }
}

/* Aggressive mobile viewport fix */
@media (max-width: 768px) {
  .h-\[100dvh\] {
    height: 100vh;
    height: calc(100vh - env(keyboard-inset-height, 0px));
  }

  /* Safari iOS specific */
  @supports (-webkit-touch-callout: none) {
    .h-\[100dvh\] {
      height: -webkit-fill-available;
      height: calc(-webkit-fill-available - env(keyboard-inset-height, 0px));
    }
  }
}

/* iOS safe area support */
@supports (padding: max(0px)) {
  .pb-safe {
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
}

/* Mobile Layout Grid - Exact Height Control */
.mobile-layout-grid {
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "nav"
    "chat"
    "input";
  overflow: hidden;
}

.mobile-nav-area {
  grid-area: nav;
  flex-shrink: 0;
}

.mobile-chat-area {
  grid-area: chat;
  min-height: 0;
  overflow: hidden;
}

.mobile-input-area {
  grid-area: input;
  flex-shrink: 0;
}

/* iOS Safe Area for mobile input */
@supports (padding: max(0px)) {
  .mobile-input-area {
    padding-bottom: max(0.5rem, env(safe-area-inset-bottom));
  }
}

/* Mobile scroll prevention - ONLY for chat interface */
@media (max-width: 768px) {
  /* Allow normal scrolling on all pages by default */
  html,
  body {
    overflow: auto;
    overscroll-behavior: auto;
    position: static;
    width: auto;
    height: auto;
    touch-action: auto;
  }

  /* Specific styles for chat interface pages */
  body:has(.mobile-layout-grid),
  body.mobile-chat-interface {
    overflow: hidden;
    overscroll-behavior: none;
    position: fixed;
    width: 100%;
    height: 100%;
    touch-action: pan-x manipulation;
  }

  /* NUCLEAR OPTION: Override all possible conflicting CSS for drawer */
  .mobile-input-area .drawer-scroll-horizontal,
  .mobile-input-area .bg-default-100 .drawer-scroll-horizontal,
  .mobile-layout-grid .mobile-input-area .drawer-scroll-horizontal,
  .mobile-layout-grid
    .mobile-input-area
    .bg-default-100
    .drawer-scroll-horizontal {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
    /* Clear any containment that might block scrolling */
    contain: none !important;
    /* Reset any transforms that might affect scrolling */
    transform: none !important;
    /* Ensure proper positioning */
    position: relative !important;
    /* Reset any max-width constraints */
    max-width: none !important;
    /* Ensure proper z-index */
    z-index: 10 !important;
    /* Force minimum width for content */
    min-width: 100% !important;
    /* Override any flex constraints */
    flex: none !important;
    /* Reset any grid constraints */
    grid-column: unset !important;
    grid-row: unset !important;
  }

  .mobile-layout-grid {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    height: 100vh;
    height: 100svh;
    width: 100vw;
    overflow: hidden;
    overscroll-behavior: none;
    touch-action: manipulation;
  }

  /* Ensure mobile-layout-grid doesn't restrict input area touch handling */
  .mobile-layout-grid .mobile-input-area {
    touch-action: pan-x pan-y !important;
    overflow: visible !important;
    contain: none !important;
  }

  .mobile-nav-area {
    position: relative;
    z-index: 10;
    flex-shrink: 0;
    touch-action: manipulation;
  }

  .mobile-input-area {
    position: relative;
    z-index: 5;
    flex-shrink: 0;
    touch-action: pan-x pan-y !important;
  }

  .mobile-chat-area {
    position: relative;
    width: 100%;
    overflow: hidden;
    touch-action: pan-y;
    overscroll-behavior: none;
    -webkit-overflow-scrolling: touch;
  }

  /* Ensure the scrollable div inside chat area behaves properly */
  .mobile-chat-area > div {
    height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    overscroll-behavior: contain;
    -webkit-overflow-scrolling: touch;
  }

  /* Prevent horizontal scrolling in chat window */
  .hide-scrollbar {
    overflow-x: hidden !important;
    overscroll-behavior: none !important;
    /* Allow both horizontal and vertical panning so drawers can scroll */
    touch-action: pan-x pan-y !important;
  }

  /* Critical override: Allow horizontal scrolling in drawer even with hide-scrollbar */
  .mobile-input-area .drawer-scroll-horizontal.hide-scrollbar,
  .mobile-input-area .bg-default-100 .drawer-scroll-horizontal.hide-scrollbar,
  .mobile-layout-grid
    .mobile-input-area
    .drawer-scroll-horizontal.hide-scrollbar,
  .drawer-scroll-horizontal.hide-scrollbar {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
  }

  /* Exception: Allow horizontal scrolling in drawer - More specific selector */
  .mobile-input-area .bg-default-100 .hide-scrollbar,
  .mobile-input-area .flex.overflow-x-auto.hide-scrollbar,
  .mobile-layout-grid .mobile-input-area .hide-scrollbar {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
  }

  /* Ultra-specific override for drawer scrolling - target exact classes */
  .mobile-input-area .flex.overflow-x-auto.gap-4.pb-2.hide-scrollbar {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
  }

  /* Drawer-specific scrolling class - Ultra high specificity */
  .drawer-scroll-horizontal,
  .mobile-input-area .drawer-scroll-horizontal,
  .mobile-layout-grid .mobile-input-area .drawer-scroll-horizontal,
  .mobile-layout-grid
    .mobile-input-area
    .bg-default-100
    .drawer-scroll-horizontal,
  div.mobile-input-area div.bg-default-100 div.drawer-scroll-horizontal,
  .mobile-input-area .drawer-scroll-horizontal.hide-scrollbar,
  .mobile-layout-grid
    .mobile-input-area
    .drawer-scroll-horizontal.hide-scrollbar {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    /* Hide scrollbar but keep functionality */
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
    /* Ensure minimum width for grid content */
    min-width: 100% !important;
  }

  .drawer-scroll-horizontal::-webkit-scrollbar,
  .mobile-input-area .drawer-scroll-horizontal::-webkit-scrollbar,
  .mobile-layout-grid
    .mobile-input-area
    .drawer-scroll-horizontal::-webkit-scrollbar,
  .drawer-scroll-horizontal.hide-scrollbar::-webkit-scrollbar {
    display: none !important;
  }

  /* Ensure the grid inside drawer can scroll horizontally */
  .drawer-scroll-horizontal .grid-flow-col {
    min-width: max-content !important;
    width: max-content !important;
  }

  /* Critical fix: Override any parent container that might block scrolling */
  .mobile-input-area .drawer-scroll-horizontal,
  .mobile-input-area .bg-default-100 .drawer-scroll-horizontal,
  .mobile-layout-grid .mobile-input-area .drawer-scroll-horizontal,
  .mobile-input-area .drawer-scroll-horizontal.hide-scrollbar,
  .mobile-layout-grid
    .mobile-input-area
    .drawer-scroll-horizontal.hide-scrollbar {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
    /* Ensure it can scroll by overriding any parent restrictions */
    position: relative !important;
    z-index: 1 !important;
  }

  /* Ensure drawer container scrolling is never blocked */
  .mobile-input-area .drawer-scroll-horizontal .grid {
    touch-action: pan-x pan-y !important;
    pointer-events: auto !important;
    overflow: visible !important;
  }

  /* Debug rule to ensure styles are applied - adds subtle border */
  .mobile-input-area .drawer-scroll-horizontal {
    border-left: 1px solid transparent !important;
  }

  /* BRUTE FORCE: Override ALL possible blocking CSS */
  .drawer-scroll-horizontal {
    overflow-x: scroll !important;
    overflow-y: hidden !important;
    touch-action: pan-x !important;
    overscroll-behavior-x: auto !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: auto !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
    /* Force scrollable state */
    max-width: 100% !important;
    width: 100% !important;
    /* Reset any transforms or positioning that might interfere */
    transform: none !important;
    position: relative !important;
    /* Force the element to be scrollable */
    display: flex !important;
    flex-direction: row !important;
    white-space: nowrap !important;
  }

  /* Target every possible parent container that might be blocking */
  .mobile-input-area,
  .mobile-input-area > *,
  .mobile-input-area form,
  .mobile-input-area .bg-default-100,
  .mobile-input-area .w-full,
  .mobile-layout-grid .mobile-input-area,
  .mobile-layout-grid .mobile-input-area > *,
  .mobile-layout-grid .mobile-input-area form,
  .mobile-layout-grid .mobile-input-area .bg-default-100 {
    overflow-x: visible !important;
    contain: none !important;
    touch-action: pan-x pan-y !important;
  }

  /* Target the specific grid element inside drawer */
  .drawer-scroll-horizontal .grid,
  .drawer-scroll-horizontal .grid.grid-rows-2,
  .drawer-scroll-horizontal .grid.grid-flow-col,
  .drawer-scroll-horizontal
    .grid.grid-rows-2.auto-cols-max.gap-4.grid-flow-col.min-w-max {
    touch-action: pan-x pan-y !important;
    pointer-events: auto !important;
    overflow: visible !important;
    contain: none !important;
    min-width: max-content !important;
    width: max-content !important;
  }

  /* Force horizontal scrolling for any flex container with overflow-x-auto in input area */
  .mobile-input-area .flex.overflow-x-auto,
  .mobile-input-area .bg-default-100 .flex.overflow-x-auto,
  .mobile-layout-grid .mobile-input-area .flex.overflow-x-auto {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
  }

  /* Target the exact class combination used in the drawer */
  .mobile-input-area .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal,
  .mobile-input-area
    .bg-default-100
    .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal,
  .mobile-layout-grid
    .mobile-input-area
    .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal,
  .mobile-layout-grid
    .mobile-input-area
    .bg-default-100
    .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
    /* Override any conflicting Tailwind classes */
    overscroll-behavior: contain none !important;
    scroll-snap-type: none !important;
    contain: none !important;
  }

  /* Override general mobile restrictions for drawer containers */
  .mobile-input-area .bg-default-100 {
    overflow-x: visible !important;
    overflow-y: visible !important;
    contain: none !important;
  }

  /* Specific rule for drawer container with bg-default-100 */
  .mobile-input-area .w-full.bg-default-100.rounded-t-lg,
  .mobile-input-area .bg-default-100.rounded-t-lg,
  .mobile-layout-grid .mobile-input-area .w-full.bg-default-100.rounded-t-lg {
    overflow-x: visible !important;
    overflow-y: visible !important;
    contain: none !important;
    touch-action: pan-x pan-y !important;
    pointer-events: auto !important;
    /* Ensure child elements can scroll horizontally */
    position: relative !important;
  }

  /* Ensure drawer parent container allows horizontal overflow */
  .mobile-input-area .bg-default-100 > div {
    overflow-x: visible !important;
    min-width: 100% !important;
  }

  /* Ensure proper touch handling for drawer area */
  .mobile-input-area .bg-default-100,
  .mobile-input-area .bg-default-100 * {
    touch-action: pan-x pan-y !important;
  }

  /* Ultra-specific override for Form element containing drawer */
  .mobile-input-area form,
  .mobile-input-area .bg-default-100 form,
  .mobile-layout-grid .mobile-input-area form {
    overflow-x: visible !important;
    overflow-y: visible !important;
    touch-action: pan-x pan-y !important;
    contain: none !important;
  }

  /* Ensure flex container with gap allows horizontal scrolling */
  .mobile-input-area .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal,
  .mobile-input-area
    .bg-default-100
    .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal,
  .mobile-layout-grid
    .mobile-input-area
    .flex.overflow-x-auto.gap-4.pb-2.drawer-scroll-horizontal {
    overflow-x: auto !important;
    overflow-y: hidden !important;
    touch-action: pan-x pan-y !important;
    overscroll-behavior-x: contain !important;
    overscroll-behavior-y: none !important;
    -webkit-overflow-scrolling: touch !important;
    pointer-events: auto !important;
    scroll-behavior: smooth !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
  }

  /* Ensure content doesn't exceed viewport width */
  .mobile-chat-area * {
    max-width: 100vw;
    box-sizing: border-box;
  }

  /* Prevent horizontal movement in chat messages */
  .mobile-chat-area .max-w-4xl,
  .mobile-chat-area .max-w-\[75\%\] {
    max-width: calc(100vw - 2rem) !important;
  }

  /* Prevent images and videos from causing horizontal overflow */
  .mobile-chat-area img,
  .mobile-chat-area video {
    max-width: 100% !important;
    height: auto !important;
    object-fit: contain !important;
  }

  /* Ensure message containers don't exceed viewport */
  .mobile-chat-area .group {
    max-width: 100%;
    overflow-x: hidden;
  }

  /* Allow horizontal scrolling for the drawer grid */
  .mobile-input-area .grid.grid-flow-col {
    touch-action: pan-x pan-y !important;
    min-width: max-content !important;
  }

  /* Ensure drawer container allows horizontal overflow */
  .mobile-input-area .relative.w-full.bg-default-100 {
    overflow-x: visible !important;
    overflow-y: visible !important;
  }
}

/* Scrollbar hiding utility */
@layer utilities {
  .scrollbar-hide {
    /* Hide scrollbar for Chrome, Safari and Opera */
    &::-webkit-scrollbar {
      display: none;
    }

    /* Hide scrollbar for IE, Edge and Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  /* ScrollTrigger animation utilities */
  .scroll-animate {
    opacity: 0;
    transform: translateY(30px);
  }

  .scroll-animate-up {
    opacity: 0;
    transform: translateY(-30px);
  }

  .scroll-animate-left {
    opacity: 0;
    transform: translateX(-30px);
  }

  .scroll-animate-right {
    opacity: 0;
    transform: translateX(30px);
  }

  .scroll-animate-scale {
    opacity: 0;
    transform: scale(0.8);
  }

  .scroll-animate-rotate {
    opacity: 0;
    transform: rotate(10deg);
  }

  /* Prevent flash of unstyled content */
  .gsap-loading {
    visibility: hidden;
  }

  .gsap-ready {
    visibility: visible;
  }
}
